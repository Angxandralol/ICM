---
import { LoginController } from "../../controllers/login.controller.ts";
import ContainerLoading from "../../components/admin/Loading.tsx";
import { userType } from "../../../constants/userType.ts";
import AccessExpired from "../accessExpired.astro";
import AccessDenied from "../accessDenied.astro";
import Layout from "../../layouts/Layout.astro";
import Navbar from "../../layouts/Navbar.astro";

const token = Astro.cookies.get("token");
const currentUserType = Astro.cookies.get("type");
let access = false;
let tokenExpired = false;

const verifyUser = async () => {
    if ((currentUserType) && (currentUserType.value == userType.admin)) {
        if ((token) && (token.value)) {
            const activeUser = await LoginController.isActiveUser(token.value, userType.admin);    
            if (activeUser) access = true;
            else tokenExpired = true;
        }
    } 
}

await verifyUser();
---
<Layout title="Perfil - ICM">
    {access && !tokenExpired &&
        <main class="w-full flex flex-col justify-center p-2">
            <Navbar loggedUser={userType.admin}></Navbar>
            <ContainerLoading token={token.value} container={'Users'} client:load></ContainerLoading>
        </main>
    }
    {!access && !tokenExpired &&
        <AccessDenied></AccessDenied>
    }
    {!access && tokenExpired &&
        <AccessExpired></AccessExpired>
    }
</Layout>
